name: On Commit Push To Main

on:
  push:
    branches:
      - main

jobs:
  pytest:
    permissions: write-all
    strategy:
      matrix:
        python-versions:
         - "3.9"
         - "3.10"
         - "3.11"
        hosts:
          - 'windows-latest'
          - 'ubuntu-latest'
          - 'macos-latest'
    runs-on: ${{ matrix.hosts }}
    steps:
      - uses: actions/checkout@v3
      - name: Run Pytest
        id: run-pytest
        uses: ./.github/actions/run-pytest
        with:
          python-version: ${{ matrix.python-versions }}
          host: ${{ matrix.hosts }}
  publish-to-pypi:
    needs:
      - pytest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Check if Package already exists on PyPI
        id: check-pypi
        uses: ./.github/actions/check-if-package-exists-on-pypi
        with:
          python-version: "3.10"
      - name: Publish to PyPI
        if: steps.check-pypi.outputs.exists == 'False'
        uses: ./.github/actions/publish-to-pypi
        with:
          pypi-api-token: ${{ secrets.PYPI_API_TOKEN }}
          python-version: "3.10"

  publish-to-ghrelease:
    permissions: write-all
    needs:
      - pytest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ inputs.python-version }}
      - name: Dump release version
        id: set-version
        run: |
          make output_file_path=version.txt dump_release_version
          cat ./version.txt >> $GITHUB_OUTPUT
      - name: Publish to Github Release
        uses: ./.github/actions/publish-to-ghrelease
        with:
          gh-release-tag-name: ${{ steps.set-version.outputs.version }}
          gh-release-release-name: Release ${{ steps.set.outputs.version }}
          gh-token: ${{ secrets.GITHUB_TOKEN }}
